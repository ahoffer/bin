#!/usr/bin/env bash
#
# Docker Load Images
#
# Load all Docker image tarballs from the current directory into Docker. Uses parallel processing when available for faster loading.

set -euo pipefail

# Kill all child jobs on Ctrl+C
trap 'echo "Interrupted. Killing all jobs..."; kill 0; exit 1' SIGINT

EXTRACT_DIR="."
mapfile -t TARFILES < <(find "$EXTRACT_DIR" -maxdepth 1 -name '*.tar')

if [[ ${#TARFILES[@]} -eq 0 ]]; then
  echo "No .tar files found to load."
  exit 1
fi

echo "Found ${#TARFILES[@]} image tarballs. Loading..."

load_image() {
  local tarfile="$1"
  echo "Loading image from $tarfile"
  docker load -i "$tarfile"
}

export -f load_image

if command -v parallel &>/dev/null; then
  printf "%s\n" "${TARFILES[@]}" | parallel --will-cite load_image {}
else
  echo "Warning: GNU parallel not found. Falling back to sequential loading." >&2
  for tar in "${TARFILES[@]}"; do
    load_image "$tar"
  done
fi

echo "All images loaded successfully!"

