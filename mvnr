#!/usr/bin/env bash
#
# mvnr - Maven Runner
# 
# A wrapper script that automatically configures Maven with project-specific
# settings including local repository location and settings file.
# 
# Usage: mvnr [maven-options] <goals>
# Examples: mvnr compile
#          mvnr clean install
#          mvnr test -Dtest=MyTest

set -euo pipefail

# Store original working directory
readonly ORIGINAL_PWD="$(pwd -P)"

# Find the topmost pom.xml (project root) for repository configuration
find_project_root() {
    local current_dir="$ORIGINAL_PWD"
    local project_root=""
    
    while [[ -n "$current_dir" ]]; do
        if [[ -f "$current_dir/pom.xml" ]]; then
            project_root="$current_dir"
        fi
        
        local parent_dir="$(dirname "$current_dir")"
        [[ "$parent_dir" == "$current_dir" ]] && break
        current_dir="$parent_dir"
    done
    
    echo "$project_root"
}

# Validate that we have a Maven project
readonly PROJECT_ROOT="$(find_project_root)"
[[ -n "$PROJECT_ROOT" ]] || {
    echo "Error: No pom.xml found in any parent directory of $ORIGINAL_PWD" >&2
    exit 2
}

# Configure local repository
readonly LOCAL_REPO="$PROJECT_ROOT/.m2/repository"
mkdir -p "$LOCAL_REPO"

# Determine Maven launcher (wrapper or system Maven)
if [[ -x "$PROJECT_ROOT/mvnw" ]]; then
    readonly MAVEN_LAUNCHER="$PROJECT_ROOT/mvnw"
else
    readonly MAVEN_LAUNCHER="$(command -v mvn || true)"
    [[ -n "$MAVEN_LAUNCHER" ]] || {
        echo "Error: Maven not found in PATH and no mvnw wrapper available" >&2
        exit 127
    }
fi

# Validate that goals are provided
[[ $# -gt 0 ]] || {
    echo "Error: No Maven goals specified" >&2
    echo "Usage: mvnr [options] <goals>" >&2
    echo "Examples:" >&2
    echo "  mvnr compile" >&2
    echo "  mvnr clean install" >&2
    echo "  mvnr test -Dtest=MyTest" >&2
    exit 1
}

# Build Maven arguments
MAVEN_ARGS=(
    "-Dmaven.repo.local=$LOCAL_REPO"
)

# Add settings file if it exists
[[ -f "$HOME/.m2/settings.xml" ]] && MAVEN_ARGS+=("-s" "$HOME/.m2/settings.xml")

# Execute Maven
exec "$MAVEN_LAUNCHER" "${MAVEN_ARGS[@]}" "$@"
