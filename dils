#!/usr/bin/env bash
#
# Docker Image List
#
# List Docker images with formatted output showing repository:tag, creation time, and size. 
# Supports optional filtering and sorting options.
# Usage: dils [filter] [-t]
#   filter: Optional text to filter images by repository/tag
#   -t: Sort by creation time (most recent first)

# Parse arguments
SORT_BY_TIME=false
FILTER=""

while [[ $# -gt 0 ]]; do
  case $1 in
    -t)
      SORT_BY_TIME=true
      shift
      ;;
    *)
      if [ -z "$FILTER" ]; then
        FILTER="$1"
      fi
      shift
      ;;
  esac
done

# Get the data with both timestamp and human-readable format, filter out dangling images
DATA=$(docker image ls --format='{{.Repository}}:{{.Tag}}\t{{.CreatedAt}}\t{{.CreatedSince}}' | grep -v '<none>')

# Set header
HEADER="REPOSITORY:TAG                                                                               CREATED"

# Apply filter if specified
if [ -n "$FILTER" ]; then
  DATA=$(echo "$DATA" | grep -i "$FILTER")
fi

# Sort data based on option
if [ "$SORT_BY_TIME" = true ]; then
  # Sort by creation time (most recent first) using timestamp field (column 2), then by repository:tag (column 1)
  # Extract just the date/time part (without timezone) for sorting
  SORTED_DATA=$(echo "$DATA" | awk -F'\t' '{gsub(/ [A-Z]{3,4}$/, "", $2); print $1 "\t" $2 "\t" $3}' | sort -k2,2r -k1,1 | awk -F'\t' '{print $1 "\t" $3}')
else
  # Sort lexically by repository:tag
  SORTED_DATA=$(echo "$DATA" | sort | awk -F'\t' '{print $1 "\t" $3}')
fi

# Output header and sorted data with fixed-width columns
# Calculate the width needed for the repository column
MAX_WIDTH=$(echo "$SORTED_DATA" | awk -F'\t' '{print length($1)}' | sort -n | tail -1)
WIDTH=$((MAX_WIDTH + 2))  # Add 2 for padding

printf "%-${WIDTH}s %s\n" "REPOSITORY:TAG" "CREATED"
echo "$SORTED_DATA" | while IFS=$'\t' read -r repo time; do
  printf "%-${WIDTH}s %s\n" "$repo" "$time"
done
