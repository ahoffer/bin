#!/usr/bin/env bash

# Initialize variables with default values
clean=true
skip_tests=true
disable_multithreading=false
enable_retag=false
custom_args=()
maven_goals=()
MAVEN_ARGS=()

while [[ $# -gt 0 ]]; do
    case "$1" in
        --dirty|-d)
            clean=false
            shift
            ;;
        --test|-t)
            skip_tests=false
            shift
            ;;
        --single-thread|-1)
            disable_multithreading=true
            shift
            ;;
        --retag|-r)
            enable_retag=true
            shift
            ;;
        --help|-h)
            cat <<EOF
Usage: $0 [OPTIONS] [MAVEN-GOALS]

Quick Build with Docker - builds with default docker registry, then retags with branch/commit.

Options:
  -d, --dirty       Skip clean step (incremental build)
  -t, --test        Run tests (default: skip tests)
  -1, --single-thread Disable multi-threading (default: -T6)
  -r, --retag       Retag built images with branch/commit (default: no retagging)
  -h, --help        Show this help message

EOF
            exit 0
            ;;
        -*)
            # Maven system properties or other options (e.g., -Dproperty=value, -X, -e)
            custom_args+=("$1")
            shift
            ;;
        *)
            # Maven goals (e.g., clean, install, compile, test)
            maven_goals+=("$1")
            shift
            ;;
    esac
done


# Find project root (directory containing pom.xml)
find_project_root() {
    local dir="$PWD"
    while [[ "$dir" != "/" ]]; do
        if [[ -f "$dir/pom.xml" ]]; then
            echo "$dir"
            return 0
        fi
        dir=$(dirname "$dir")
    done
    return 1
}

# Get Git info for Docker image naming (only if retagging is enabled)
if $enable_retag; then
    if git rev-parse --git-dir >/dev/null 2>&1; then
        docker_tag="$(git rev-parse --abbrev-ref HEAD)/$(git rev-parse --short=6 HEAD)"
    else
        echo "Error: --retag requires a git repository" >&2
        exit 3
    fi
fi

# Set default goals if none provided
if [[ ${#maven_goals[@]} -eq 0 ]]; then
    if $clean; then
        maven_goals=(clean install)
    else
        maven_goals=(install)
    fi
fi
# Add multi-threading unless disabled
$disable_multithreading || MAVEN_ARGS+=("-T6")

# Add skip tests if enabled
$skip_tests && MAVEN_ARGS+=("-DskipTests")

# Add custom arguments
MAVEN_ARGS+=("${custom_args[@]}")

#This can mess up other projects
mvn com.spotify.fmt:fmt-maven-plugin:format

echo "Executing: mvn ${MAVEN_ARGS[*]} ${maven_goals[*]}"

# Execute Maven build
mvn "${MAVEN_ARGS[@]}" "${maven_goals[@]}"

# If retagging is not enabled, we're done
$enable_retag || exit 0

echo "Retagging images with: $docker_tag"

# Simple retagging: find recent images and retag them
docker images --format "{{.Repository}}:{{.Tag}}" --filter "since=1h" | head -5 | while read -r image; do
    [[ "$image" != *"$docker_tag"* ]] || continue
    echo "Retagging: $image -> $docker_tag"
    docker tag "$image" "$docker_tag" 2>/dev/null
done

