#!/usr/bin/env bash
# version 1.0.1 — DoD PKI + Chrome/NSS importer for Ubuntu 24

set -euo pipefail

# ——— 0) Args & prerequisites —————————————————————————————
if [[ $# -ne 1 ]]; then
  echo "Usage: $0 <DoD_cert_bundle.zip>" >&2
  exit 1
fi
ZIPFILE="$1"
if [[ ! -f "$ZIPFILE" ]]; then
  echo "ERROR: '$ZIPFILE' not found." >&2
  exit 1
fi

# Ensure we have unzip, openssl, update-ca-certificates & certutil
for cmd in unzip openssl update-ca-certificates certutil; do
  if ! command -v "$cmd" &>/dev/null; then
    echo "[*] Installing missing package for $cmd"
    sudo apt-get update -qq
    case "$cmd" in
      unzip)               sudo apt-get install -y unzip              ;;
      openssl)             sudo apt-get install -y openssl            ;;
      update-ca-certificates) sudo apt-get install -y ca-certificates ;;
      certutil)            sudo apt-get install -y libnss3-tools      ;;
    esac
  fi
done

# ——— 1) Unzip into temp dir ————————————————————————————————
TEMPDIR=$(mktemp -d /tmp/dod_certs.XXXXXX)
echo "[*] Extracting '$ZIPFILE' → $TEMPDIR"
unzip -q "$ZIPFILE" -d "$TEMPDIR"

# ——— 2) Locate the .p7b bundles —————————————————————————————
mapfile -t P7B_FILES < <(find "$TEMPDIR" -type f -iname '*.p7b')
echo "[*] Found ${#P7B_FILES[@]} P7B bundle(s)"
(( ${#P7B_FILES[@]} )) || { echo "ERROR: no .p7b files" >&2; exit 1; }

# ——— 3) Prep system CA dir ————————————————————————————————
DEST_DIR="/usr/local/share/ca-certificates/dod"
echo "[*] Installing into $DEST_DIR"
sudo mkdir -p "$DEST_DIR"
sudo chmod 755 "$DEST_DIR"

# ——— 4) Convert & split each P7B → individual .crt —————————————————
CERT_FILES=()
for P7B in "${P7B_FILES[@]}"; do
  bn=$(basename "$P7B")
  echo "[*] Processing $bn"
  [[ -s "$P7B" ]] || { echo "  WARN: $bn empty, skipping"; continue; }

  # detect DER vs PEM
  if grep -q '^-----BEGIN' "$P7B"; then
    INFORM=PEM
  else
    INFORM=DER
  fi

  COMBINED="$TEMPDIR/${bn%.p7b}.pem"
  openssl pkcs7 -print_certs -in "$P7B" -inform "$INFORM" -out "$COMBINED"

  # split into N .crt files
  idx=0
  while IFS= read -r line; do
    if [[ "$line" == "-----BEGIN CERTIFICATE-----" ]]; then
      ((idx++))
      out="$TEMPDIR/${bn%.p7b}_$idx.crt"
      CERT_FILES+=("$out")
      printf '%s\n' "$line" > "$out"
    elif (( idx > 0 )); then
      printf '%s\n' "$line" >> "$out"
    fi
  done < "$COMBINED"

  echo "  → extracted $idx cert(s)"
done

# ——— 5) Copy all .crt into system store ————————————————————————
echo "[*] Copying ${#CERT_FILES[@]} cert(s) → $DEST_DIR"
for crt in "${CERT_FILES[@]}"; do
  sudo install -m 644 "$crt" "$DEST_DIR/"
done

# ——— 6) Update the trust store —————————————————————————————
echo "[*] update-ca-certificates"
sudo update-ca-certificates

# ——— 7) Quick live-site verify ————————————————————————————
echo "[*] Verifying play-nice with www.defense.gov"
if echo | openssl s_client -connect www.defense.gov:443 -CApath /etc/ssl/certs \
     2>/dev/null | grep -q "Verify return code: 0"; then
  echo "✓ System trust OK"
else
  echo "✗ System trust FAILED" >&2
  exit 1
fi

# ——— 8) Chrome/NSS DB import —————————————————————————————
DBDIR="${HOME}/.pki/nssdb"
mkdir -p "$DBDIR"
if [[ ! -f "$DBDIR/cert9.db" ]]; then
  echo "[*] Initializing NSS DB at $DBDIR"
  printf '\n' | certutil -N -d "$DBDIR"
else
  echo "✓ NSS DB already exists"
fi

echo "[*] Importing into Chrome/NSS"
for crt in "$DEST_DIR"/*.crt; do
  name=$(basename "$crt" .crt)
  if certutil -d "$DBDIR" -L | grep -qF "$name"; then
    echo "  ✓ $name already in NSS DB"
  else
    certutil -d "$DBDIR" -A -n "$name" -t "CT,C,C" -i "$crt"
    echo "  → Added $name"
  fi
done

echo "SUCCESS: DoD PKI installed system-wide and in Chrome/NSS." 
exit 0
