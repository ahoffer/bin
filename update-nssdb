#!/usr/bin/env bash
set -euo pipefail

# Take all the certs that are trusted by the OS and add them to the NSSDB to let browsers use them.

DB="$HOME/.pki/nssdb"
DBDIR=$(dirname "$DB")

# 1) Ensure NSS DB exists & is initialized
if [ ! -f "$DB/cert9.db" ]; then
  echo "→ Initializing NSS DB at $DB…"
  mkdir -p "$DBDIR"
  certutil -d sql:"$DB" -N --empty-password
else
  echo "✓ NSS DB already exists at $DB"
fi

echo
echo "→ Importing all OS-trusted CAs from /etc/ssl/certs into NSS DB…"

# 2) Loop over every hash symlink in /etc/ssl/certs
for link in /etc/ssl/certs/*.0; do
  # Resolve the real certificate file
  certfile=$(readlink -f "$link")
  [ -f "$certfile" ] || continue

  # Derive a nickname from the filename (strip extension)
  nick=$(basename "$certfile" | sed 's/\.[^.]*$//')

  # 3) Skip if already imported
  if certutil -d sql:"$DB" -L -n "$nick" &>/dev/null; then
    echo "✓ $nick already trusted"
    continue
  fi

  # 4) Import with full trust (client, server, email)
  echo "→ Importing $nick"
  certutil -d sql:"$DB" \
           -A -n "$nick" \
           -t "CT,C,C" \
           -i "$certfile"
done

echo
echo "✅ All OS CAs are now registered in NSS DB at $DB."

